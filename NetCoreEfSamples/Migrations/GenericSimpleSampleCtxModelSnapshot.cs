// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetCoreEfSamples.Context;

namespace NetCoreEfSamples.Migrations
{
    [DbContext(typeof(GenericSimpleSampleCtx))]
    partial class GenericSimpleSampleCtxModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NetCoreEfSamples.Models.GenericSimpleModel.VTB.VTBBaseObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BaseObjectGeoObjectId")
                        .HasColumnType("int");

                    b.Property<int>("BaseObjectRoleId")
                        .HasColumnType("int");

                    b.Property<string>("BaseObjectTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BaseObjectGeoObjectId");

                    b.HasIndex("BaseObjectRoleId");

                    b.ToTable("BaseObjects");
                });

            modelBuilder.Entity("NetCoreEfSamples.Models.GenericSimpleModel.VTB.VTBBaseObjectGeoObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BaseObjectGeoObjectTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VTBBaseObjectGeoObjectTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BaseObjectGeoObjects");
                });

            modelBuilder.Entity("NetCoreEfSamples.Models.GenericSimpleModel.VTB.VTBBaseObjectRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BaseObjectRoleTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VTBBaseObjectRoleTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BaseObjectRoles");
                });

            modelBuilder.Entity("NetCoreEfSamples.Models.GenericSimpleModel.VTB.VTBBaseObject", b =>
                {
                    b.HasOne("NetCoreEfSamples.Models.GenericSimpleModel.VTB.VTBBaseObjectGeoObject", "BaseObjectGeoObject")
                        .WithMany()
                        .HasForeignKey("BaseObjectGeoObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NetCoreEfSamples.Models.GenericSimpleModel.VTB.VTBBaseObjectRole", "BaseObjectRole")
                        .WithMany()
                        .HasForeignKey("BaseObjectRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
